# ~/.bashrc: executed by bash(1) for non-login shells.

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# common
export EDITOR=vim

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color|alacritty) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes
#color_prompt=

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    #FGRN="\[\e[38;5;28m\]"
    FGRN="\[\e[34m\]"
    FGRB="\[\e[38;5;10m\]"
    FBLE="\[\e[34m\]"
    FRST="\[\e[38;5;94m\]"
    RS="\[\e[0m\]"    # reset
    HC="\[\e[1m\]"    # hicolor
    UL="\e[4m\]"    # underline
    INV="\e[7m\]"   # inverse background and foreground
    if [ -n "$TMUX" ]; then
        PS1="${FGRN}\u${RS}${FRST}@${FGRB}\h ${FBLE}${HC}\w${RS}>"
    else
        PS1="${FGRN}\u${RS}@${FGRB}\h ${FBLE}${HC}\w${RS}>"
    fi
else
    PS1='\u@\h>'
fi
#unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;\u@\h:\w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto -N'
    alias grep='grep --color=auto'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

if [ -f ~/.bash_local ]; then
    . ~/.bash_local
fi

# shortcuts
alias x="exit"
alias d="ls -d */"
alias l="ls -1"
alias n="ssh skew-t.com"

# dotfiles
alias dotfiles='vim ~/projects/dotfiles/tilde'
alias bl="vim ~/.bash_local && source ~/.bash_local && echo \"Successfully sourced .bash_local\""
alias bashrc="vim ~/.bashrc && source ~/.bashrc && echo \"Successfully sourced .bashrc\""

# tmux
alias t="tmux"
if [ -n "$TMUX" ]; then
    alias b='tmux last-window'
    alias f='tmux last-pane'
    alias c="tmux clock-mode"
    alias tl="tmux list-windows"
    alias tmv="tmux rename-window"
    alias tx="tmux detach"
fi

# ssh keys
alias s="ssh-add -l"
alias sd="ssh-add -D"
#alias ga="export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)"

# syntax highlight
hc() {
    highlight -O xterm256 $1
}
hl() {
    highlight -O xterm256 $1 | less -R
}

# - fzf cd to selected directory
zd() {
  local dir
  dir="$(
    find "${1:-.}" -path '*/\.*' -prune -o -type d -print 2> /dev/null \
      | fzf +m
  )" || return
  cd "$dir" || return
}

# fzf cd into the directory of the selected file
cdf() {
  local file
  file="$(fzf +m -q "$*")"
  cd "$(dirname "$file")" || return
}

# open selected file with ediro
fe() {
  local IFS=$'\n'
  local files=()
  files=(
    "$(fzf-tmux \
          --query="$1" \
          --multi \
          --select-1 \
          --exit-0
    )"
  ) || return
  "${EDITOR:-vim}" "${files[@]}"
}

# fzf git commit browser
fshow() {
  local execute

  execute="grep -o \"[a-f0-9]\{7\}\" \
    | head -1 \
    | xargs -I % sh -c 'git show --color=always % | less -R'"

  git log \
    --graph \
    --color=always \
    --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" \
    | fzf \
        --ansi \
        --no-sort \
        --reverse \
        --tiebreak=index \
        --bind=ctrl-s:toggle-sort \
        --bind "ctrl-m:execute: ($execute) <<'FZF-EOF'
  {}
FZF-EOF"
}

# fzf kill process
fkill() {
  local pid

  pid="$(
    ps -ef \
      | sed 1d \
      | fzf -m \
      | awk '{print $2}'
  )" || return

  kill -"${1:-9}" "$pid"
}

# open files in ~/.viminfo
vin() {
  local files
  files="$(
    grep '^>' "$HOME/.viminfo" \
      | cut -c3- \
      | while read -r line; do
          [[ -f "${line/\~/$HOME}" ]] && echo "$line"
        done \
      | fzf -m -0 -1 -q "$*"
  )"
  "${EDITOR:-vim}" "${files/\~/$HOME}"
}

# cmake
alias lc="cmake -S . -B build -DCMAKE_INSTALL_PREFIX=/home/austin/.local"
alias ic="cmake -S . -B build"
alias cm="cmake --build build"
alias ct="cmake --build build -t"

# other useful tools
alias sp='PS1="\u@\h>"'
alias lcf="rename 'y/A-Z/a-z/' "
alias wgetncc='wget --no-check-certificate'
alias dgs="dpkg --get-selections"
alias dud="du --max-depth=1 -hx | sort -h"
alias dns="dig +nocmd $1 +noall +answer"
alias lpng="feh -x \$(ls -tr *.png | tail -1)"
alias lwebp="feh -x \$(ls -tr *.webp | tail -1)"
alias le="exiftool \$(ls -tr *.png | tail -1)"
alias pw="tr -d -c 'a-zA-Z0-9!@#$%^&*()' < /dev/urandom | head -c 18; echo"
alias ls="ls --color=auto -h"
alias sl="sl -e"
alias whatsmyip="curl ipinfo.io/ip"
alias notes="vim ~/misc/notes.txt"
alias remake="make clean;make"
alias webshare='python -m SimpleHTTPServer'
alias wx="wget -O- -q http://skew-t.com/weather/data.php?type=currentx | jq"
alias u='date -u "+%Y%m%d/%H%MZ"'
